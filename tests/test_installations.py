import json
import os
import subprocess

import pytest

from tests.data import packages

local_dir = os.getenv("IOTEMPOWER_LOCAL", "")
# Getting installation choices which is generated by install.sh. This file resembles the dependency choices to test.
installation_options_file = os.path.join(local_dir, "installation_options.json")
# If the system dependencies are not installed by installation script, we are unable to test installations
if not os.path.isfile(installation_options_file):
    raise FileNotFoundError(
        f"Could not find {installation_options_file} to load the settings, it should be generated by iot_install"
    )

with open(installation_options_file, "r") as f:
    installation_options = json.load(f)

packages_to_test = []
for key, value in installation_options.items():
    if value.lower() == "1":
        packages_to_test += [tuple(package.values()) for package in packages if package["module"] == key]

# To see each different parameter as different test pass `-v` flag to pytest
@pytest.mark.parametrize("package_name, package_manager, module", packages_to_test)
def test_eval(package_name, package_manager, module) -> None:
    if package_manager == "binary":
        command = f"which {package_name}"
    elif package_manager == "npm":
        command = f"cd {local_dir}/nodejs && npm list {package_name}"
    else:
        raise NotImplementedError("Only installed binaries and npm packages are supported for now")
    result = subprocess.run(command, shell=True)
    assert result.returncode == 0, f"Cannot find {package_name} in your system which is needed for {module}"
