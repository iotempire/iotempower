#!/bin/env bash

# TODO: potentially also install sudo?

termux-install which

# make sure curl is not installed
if ! termux-query curl > /dev/null; then
    echo "curl is not installed, installing. Please wait..."
    termux-install curl
    # check error and return 1 if not found
    if [[ $? != 0 ]]; then
        echo "curl could not be installed, exiting now."
        exit 1
    fi
    echo "curl has been installed successfully"
fi

PACKAGE_LIST="glibc-repo"
to_install=$(filter_packages debian-query $PACKAGE_LIST)

echo "Installing: $to_install..."
termux-install $to_install
echo "Installation of $to_install complete."

# TODO: need to uninstall python-pip-glibc?
PACKAGE_LIST="ncurses-utils which glibc-runner git-glibc build-essential binutils binutils-glibc sed-glibc gcc-glibc git git-glibc mosquitto python python-ensurepip-wheels python-pip python-cryptography python-glibc make make-glibc rsync jq nodejs"
to_install=$(filter_packages debian-query $PACKAGE_LIST)

echo "Installing: $to_install..."
termux-install $to_install
echo "Installation of $to_install complete."

# curl git mosquitto python-virtualenv rsync haveged jq # general
# ./arch-install iptables bridge-utils hostapd dnsmasq # router and networking

# ./arch-install mc micro # this is optional: mc is nicer file management in cli, micro a nicer editor than nano

# sudo systemctl stop mosquitto
# sudo systemctl disable mosquitto


echo "Implementing a fix for node-gyp." # TODO verify how long that is happening
mkdir -p "$HOME/.gyp"
if [ ! -f "$HOME/.gyp/include.gypi" ]; then
    cat << EOF > "$HOME/.gyp/include.gypi"
{
 'variables': {
  'android_ndk_path': ''
 }
}
EOF
fi

# # solve small mess up with global and local modules on termux
# mkdir -p "$HOME/node_modules"
mkdir -p "$IOTEMPOWER_LOCAL/nodejs"
# ln -s "$HOME/node_modules" "$IOTEMPOWER_LOCAL/nodejs"
