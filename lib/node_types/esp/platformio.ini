[platformio]
default_envs = ${sysenv.board}
extra_configs = platformio-libs.ini

[common]
platform = espressif8266@4.0.1
;platform = espressif8266@4.1.0
; 6.2 is broken for lots of libraries: https://github.com/espressif/arduino-esp32/pull/8147
platform32 = espressif32@6.4.0
framework = arduino
monitor_speed = 115200
; eagle.flash.1m.ld -> build always a small image for little Ram
; add -E to build flags to untangle macro expandion (and look into compiled files)
build_flags =
    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
    -DLOG_LOCAL_LEVEL=ESP_LOG_INFO
    -w
    -Wl,-Teagle.flash.1m.ld
;    -fexceptions
;    -DDEBUG_ESP_PORT=Serial
;    -DDEBUG_ESP_CORE
;    -DDEBUG_ESP_OOM
;    -DDEBUG_ESP_WIFI
;    -DDEBUG_ESP_HTTP_UPDATE
;    -DDEBUG_ESP_UPDATER
;    -DDEBUG_ESP_OTA
;    -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h" doesn't work with include
    ; TODO: make it easier to select debug options
;build_flags = -Wl,-Teagle.flash.512k0.ld - even smaller

;src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<setup.cpp>

extra_scripts =
  pre:pre_extra_script.py

;lib_ldf_mode = deep+
;lib_ldf_mode = chain+
;lib_ldf_mode = off
; Only the following finds Wire.h
lib_ldf_mode = chain

; TODO: re-check if this is necessary or if we can go back to 80MHz
cpu_speed = 160000000L

base_lib_deps =
  PubSubClient@^2.8
  https://github.com/iotempire/TrueRMS
extra_lib_deps = 
extra_lib_deps_esp32 =

; https://github.com/iotempire/TrueRMS: computation helper for RMS - will always be available for filters

  ; obsoleted due to automated and included dependencies
  ; https://github.com/beegee-tokyo/DHTesp
  ; milesburton/DallasTemperature@^3.11.0
  ; fastled/FastLED@^3.6.0
  ; makuna/NeoPixelBus@^2.7.0
  ; olikraus/U8g2@^2.35.6
  ; tonykambo/LiquidCrystal_I2C
  ; seeed-studio/Grove Barometer Sensor@^2.1.0
  ; seeed-studio/Grove - Barometer Sensor BMP280@^1.0.1
  ; claws/BH1750@^1.3.0
  ; sparkfun/SparkFun TSL2561@^1.1.0
  ; miguelbalboa/MFRC522@^1.4.10
  ; adafruit/Adafruit MPR121@^1.1.1
  ; crankyoldgit/IRremoteESP8266@^2.8.6
  ; https://github.com/iotempire/SparkFun_MPU-9250_Breakout_Arduino_Library
  ; bogde/HX711@^0.7.5

; temporarily disabled (encryption): https://github.com/jedisct1/libhydrogen
; trouble with esp32:   https://github.com/sparkfun/SparkFun_MPU-9250_Breakout_Arduino_Library
; FastLED - has sometimes interrupt problems, but still used for color - therefor pixelbus added

;  https://github.com/gioblu/PJON

; obsoleted due to automated and included dependencies
; lib_deps_esp32=
;   madhephaestus/ESP32Servo@^0.13.0

; 1089: IRRemote for Wemos D1 Mini, see here: https://github.com/crankyoldgit/IRremoteESP8266

; 839: MPR121 from Adafruit, see here: https://github.com/adafruit/Adafruit_MPR121

;   AsyncMqttClient -> moved to PubSubClient, handling the responses for finishing the publish was too hard

; 63: MFRC522 RFID reader connected via SPI
; https://github.com/miguelbalboa/rfid

; Now directly in iotempower
;  https://github.com/SteveQuinn1/SparkFun_APDS-9960_Sensor_Arduino_Library

; This one is obsolete as we are now doing our own configuration and adoption
; through a serially connected esp (dongle)
;   https://github.com/ulno/WiFiManager.git


; === APDS9960 gesture/color/proximity by SparkFun Electronics (maintainer)
;  304: https://github.com/sparkfun
;  better but not good: https://github.com/jonn26/SparkFun_APDS-9960_Sensor_Arduino_Library
; best as non blocking: https://github.com/SteveQuinn1/SparkFun_APDS-9960_Sensor_Arduino_Library

; === Light sensor ===
;  439: https://github.com/claws/BH1750
;  603: https://github.com/sparkfun/SparkFun_TSL2561_Arduino_Library

; === Barometer ===
; 3672: Seeedstudio's BMP085/BMP180 library: https://github.com/Seeed-Studio/Grove_Barometer_Sensor
; 5256: Seeedstudio's BMP280 library: https://github.com/Seeed-Studio/Grove_BMP280

; === Displays ===
; U82g
; 1574: LiquidCrystal_I2C from Tony Kambo: https://github.com/tonykambo/LiquidCrystal_I2C

; === Scale/Weight ===
; integrated into project -> 1900: for HX711 scale/weigh module 
; obsolete https://github.com/olkal/HX711_ADC
; https://github.com/bogde/HX711 - TODO: declare as proper i2c device


; === Gyroscope(s) ===
; integrated into project -> see how to reference library
;  I2Cdevlib-Core=https://github.com/ulno/i2cdevlib
;  I2Cdevlib-MPU6050: MPU6050 part from i2cdevlib
; 2824: MPU 6050 by tockn: https://github.com/tockn/MPU6050_tockn <- seems broken
;
; for MPU-9250: 
; fusing for MPU-9250: https://github.com/sparkfun/SparkFun_MPU-9250_Breakout_Arduino_Library
; not used: 578: Sensors from James Smith: https://github.com/loopj/i2c-sensor-hal


; nodemcu does most off the usb-connected esp8266: original, wemos d1 mini + pro, feather huzzah from adafruit
[env:nodemcu]
board = nodemcuv2
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:wemos_d1_mini]
board = d1_mini
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}
upload_speed = 1000000


; [env:wemos_d1_mini_pro]
; now same as d1_mini

[env:wroom_02]
;board = esp_wroom_02 ; defective for OTA
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 921600
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}


[env:olimex]
board = modwifi
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
build_flags = ${common.build_flags}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}


[env:esp_m]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 921600
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}


[env:sonoff]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:sonoff_pow]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}


[env:esp8266]
# attention LED_INTERNAL might be mapped on 1
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
build_flags = ${common.build_flags}
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}


; TODO: check: does this still destroy the other esp libraries
[env:esp32]
# attention LED_INTERNAL might be mapped on 1
board = lolin32
platform = ${common.platform32}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
;board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32}
upload_resetmethod = nodemcu
;upload_speed = 115200
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:m5stickc]
# TODO: investigate why the esp32_pwm library does not work on internal led (default does), but on buzzer
board = m5stick-c
platform = ${common.platform32}
build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=5
    -DSOC_SDMMC_HOST_SUPPORTED
build_type = debug
monitor_filters = esp32_exception_decoder
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32} 
  m5stack/M5StickC@^0.2.5
# added library to support weird configured hardware -> TODO move to other dependencies?
upload_speed = 1500000
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:m5stickc_plus]
board = m5stick-c
platform = ${common.platform32}
build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=5
build_type = debug
monitor_filters = esp32_exception_decoder
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32} 
  m5stack/M5StickCPlus@^0.1.0
# added library to support weird configured hardware -> TODO move to other dependencies?
upload_speed = 1500000
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:esp32dev]
# attention LED_INTERNAL might be mapped on 1
board = esp32dev
platform = ${common.platform32}
; not sure the following has any effect - TODO: check
;build_flags = -I mcu-helper.h
build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=5
build_type = debug
monitor_filters = esp32_exception_decoder
;board_build.f_cpu = 240000000
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
;board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32}
;upload_resetmethod = nodemcu not available on esp32
;board_build.flash_mode = qio
;board_build.f_flash = 80000000L
;board_build.partitions = default_8MB.csv
;board_build.partitions = min_spiffs.csv
;upload_speed = 921600
upload_speed = 2000000
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:esp32minikit]
# attention LED_INTERNAL might be mapped on 1
board = mhetesp32minikit
platform = ${common.platform32}
; not sure the following has any effect - TODO: check
;build_flags = -I mcu-helper.h
build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=5
build_type = debug
monitor_filters = esp32_exception_decoder
;board_build.f_cpu = 240000000
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
;board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32}
;upload_resetmethod = nodemcu not available on esp32
;board_build.flash_mode = qio
;board_build.f_flash = 80000000L
;board_build.partitions = default_8MB.csv
;board_build.partitions = min_spiffs.csv
;upload_speed = 921600
upload_speed = 2000000
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}

[env:lolin_s2_mini]
# attention LED_INTERNAL might be mapped on 1
board = lolin_s2_mini
platform = ${common.platform32}
; not sure the following has any effect - TODO: check
;build_flags = -I mcu-helper.h
build_flags = 
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=5
build_type = debug
monitor_filters = esp32_exception_decoder
;board_build.f_cpu = 240000000
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
;board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.base_lib_deps} ${common.extra_lib_deps} ${common.extra_lib_deps_esp32}
;upload_resetmethod = nodemcu not available on esp32
;board_build.flash_mode = qio
;board_build.f_flash = 80000000L
;board_build.partitions = default_8MB.csv
;board_build.partitions = min_spiffs.csv
;upload_speed = 921600
upload_speed = 2000000
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}
