#!/bin/bash
if [[ $# -gt 4 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF

this must be called from a node directory (or one of its parent system
directories) and reads it will set the gateway wifi configurartion of that system (SSID, password, gateway IP).

It rebuilds firmwares for the affected nodes and remotely flashes
the respected nodes.

If credentials are given, it over writes the global wifi configuration.
Else it the gateway configuration is set to the default global values

If you are running all systems from same gateway, you can also change the credentials by creating an iotempower.conf file in iot/etc/
Copy the iotempower.conf.example file, (delete the .example extension) and adjust the values.

EOF
exit 1
fi

# TODO: add option to specify input file with list of specific nodes to deploy

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2;exit 1; }


source /home/renato/iot/bin/check_router_ip
# Print it for verification
echo "Router IP: $ROUTER_IP"

# Prompt the user for SSID and password
read -p "Please choose another SSID for your gateway: " ssid
# Ask for the password until the two inputs match
while true; do
    read -sp "Please create a new password: " password
    echo
    read -sp "Please confirm your new password: " password_confirm
    echo
    if [ "$password" = "$password_confirm" ]; then
        break
    else
        echo "Passwords do not match. Please try again."
    fi
done

# Create a file to store wifi credentials
cat << EOF > /home/renato/iot/etc/wifi_credentials
SSID=$ssid
Password=$password
GatewayIP='192.168.12.1'
EOF
source /home/renato/iot/bin/setup_iotempower_config
# create iotempower_config file for global wifi configuration under /etc/config/
. /home/renato/iot/bin/setup_iotempower_config

# /etc/config/wireless
ssh root@$ROUTER_IP << EOF # ssh into router and execute the following commands to set the wifi configuration and fix the network ip for the gateway


uci set wireless.radio0.disabled='0'
uci set wireless.default_radio0.ssid="$ssid"
uci set wireless.default_radio0.encryption="psk2"
uci set wireless.default_radio0.key="$password"
uci commit wireless
wifi &

EOF
