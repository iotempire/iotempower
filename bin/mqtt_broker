#!/usr/bin/env bash
if [[ "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF
Syntax: mqtt_broker [interface]

mqtt_broker starts a local mosquitto-mqtt-server corresponding to parameters
set in iotempower/etc/iotempower.conf. If an interface is given it overwrites
the listener address with this interface. If the option scanif is given it will
try to guess the interface itself.
EOF
exit 1
fi

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2;exit 1; }
source <( iot_env ignore_system )

APTEMP="$IOTEMPOWER_LOCAL/tmp/mosquitto"
rm -rf "$APTEMP" &> /dev/null
mkdir -p "$APTEMP"
while true; do

    if [[ "$1" ]]; then
        IF="$1"
        if [[ "$IF" = "scanif" ]]; then
            # Get all non-loopback, UP interfaces
            # TODO: use ifconfig if ip does not exist (broken on Termux on Android >= 13)
            interfaces=$(ip -o link show | awk '$2 != "lo:" && $9 == "UP" {print $2}' | sed 's/\([a-zA-Z0-9]*\).*/\1/')

            # Check each interface for a local IP address, prefer the first one found
            for intf in $interfaces; do
                if ip -o addr show $intf | grep -q "inet "; then
                    interface=$intf
                    break
                fi
            done

            # If no interface with a local IP is found, use the first UP interface
            if [ -z "$interface" ]; then
                interface=$(echo "$interfaces" | head -n 1)
            fi

            IF=$interface

            # Print the interface name
            echo "Preferred interface: $interface"

        fi

        export IOTEMPOWER_MQTT_HOST=$(ip a show "$IF"|grep " inet "|head -n1|cut -dt -f2|cut -d\  -f2|cut -d/ -f1)
    fi

    echo "Listening on $IOTEMPOWER_MQTT_HOST."

    # create mosquitto config - user is needed for root on docker
    cat << EOF > "$APTEMP/mosquitto.conf"
pid_file $APTEMP/pid
user $USER
persistence false
persistence_location $APTEMP/mosquitto.db
log_dest stdout
log_type error
log_type warning
listener 1883 127.0.0.1
listener 1883 $IOTEMPOWER_MQTT_HOST
allow_anonymous true
EOF

    # create bridge
    if [ "$IOTEMPOWER_MQTT_BRIDGE_HOST" ]; then

    # bridge config based on example in http://owntracks.org/booklet/guide/bridge/
    cat << EOF >> "$APTEMP/mosquitto.conf"
connection bridge-to-$IOTEMPOWER_MQTT_BRIDGE_HOST
bridge_capath $IOTEMPOWER_MQTT_BRIDGE_CERTPATH
bridge_insecure false
address $IOTEMPOWER_MQTT_BRIDGE_HOST:$IOTEMPOWER_MQTT_BRIDGE_PORT
cleansession false
clientid bridge-$HOSTNAME-$IOTEMPOWER_MQTT_BRIDGE_HOST
start_type automatic
username $IOTEMPOWER_MQTT_BRIDGE_USER
password $IOTEMPOWER_MQTT_BRIDGE_PW
notifications false
try_private true
topic # both 2 ${IOTEMPOWER_MQTT_BRIDGE_TOPIC}/ ${IOTEMPOWER_MQTT_BRIDGE_TOPIC}/
EOF

    fi # bridge-config

    echo "Stopping all existing services."
    pkill mosquitto
    sleep 1
    echo "Starting mosquitto."
    mosquitto -v -c "$APTEMP/mosquitto.conf"
done
