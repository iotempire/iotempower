#!/usr/bin/env bash
# Example script for starting the IoTempower environment
# Modify IOTEMPOWER_ROOT accordingly to your setup
#
# If you run in termux, apply termux-fix shebang onto this script

# if this should run as root make sure to fix $HOME like this:
# HOME=/home/pi

export IOTEMPOWER_CONTAINER_NAME="iotempower"
export IOTEMPOWER_CONTAINER_SHARE="$HOME/iot-container"
export IOTEMPOWER_CONTAINER_DIR="/iot/data"
export IOTEMPOWER_ROOT="$IOTEMPOWER_CONTAINER_SHARE/iot"

# Check if this is an interactive terminal and set docker flags accordingly
if ([ -t 0 ] || [ -t 1 ]) && [ -e /dev/tty ] && [ -r /dev/tty ] && [ -w /dev/tty ]; then
    DOCKER_IT_FLAG="-it"
else
    DOCKER_IT_FLAG=""
fi

function start() {
    # Get the absolute path of the current directory, resolving symlinks
    CURRENT_DIR=$(realpath $(pwd))

    # Check if the current directory is within the mounted host directory
    if [[ "$CURRENT_DIR" =~ ^"$IOTEMPOWER_CONTAINER_SHARE" ]]; then
        # Calculate the corresponding directory inside the container
        CONTAINER_PATH="$IOTEMPOWER_CONTAINER_DIR${CURRENT_DIR#$IOTEMPOWER_CONTAINER_SHARE}"
        # Enter the Docker container at the corresponding directory
        # Forward all input parameters from "$@" (this is a bit tricky as it needs to go into docker exec)
        PARAMS=""
        for p in "$@"; do
            # Escape all internal quotes within the parameter
            p="${p//\"/\\\"}"
            PARAMS+="\"$p\" "
        done
        # Trim the trailing space
        PARAMS="${PARAMS% }"
        # if the "bash" is not given, the unpacking of the tar file does not happen
        # TODO: test why this does not work
        exec docker exec $DOCKER_IT_FLAG "$IOTEMPOWER_CONTAINER_NAME" \
            /bin/bash -c "cd \"$CONTAINER_PATH\" && exec bash iot $PARAMS"
    else
        echo "Current directory is outside the mounted volume."
        # Just enter the container without changing the directory but still forward parameters
        exec docker exec $DOCKER_IT_FLAG "$IOTEMPOWER_CONTAINER_NAME" "iot" "$@"
    fi
}

if docker ps -a --filter "name=$IOTEMPOWER_CONTAINER_NAME" | grep -q "$IOTEMPOWER_CONTAINER_NAME"; then
    start "$@"
else
    docker run -d --rm --name "$IOTEMPOWER_CONTAINER_NAME" \
        -p 40080:40080 \
        -p 1883:1883 \
        -v "$IOTEMPOWER_CONTAINER_SHARE:/iot/data" \
        ulno/iotempower > /dev/null
    start "$@"
fi

